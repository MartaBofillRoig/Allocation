# H0
width_ci_a1 <- list_res_H0[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H0$width_ci_a1[1] <-mean(width_ci_a1$width)
width_ci_a2 <- list_res_H0[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H0$width_ci_a2[1] <-mean(width_ci_a2$width)
# opt allocation
# H1
width_ciopt_a1 <- list_res_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H1$width_ci_a1[2] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_res_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H1$width_ci_a2[2] <- mean(width_ciopt_a2$width)
# H0
width_ciopt_a1 <- list_res_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H0$width_ci_a1[2] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_res_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H0$width_ci_a2[2] <- mean(width_ciopt_a2$width)
# sqrt allocation
# H1
width_cisqrt_a1 <- list_res_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H1$width_ci_a1[3] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_res_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H1$width_ci_a2[3] <- mean(width_cisqrt_a2$width)
# H0
width_cisqrt_a1 <- list_res_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H0$width_ci_a1[3] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_res_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H0$width_ci_a2[3] <- mean(width_cisqrt_a2$width)
##########################################
# Two periods
##########################################
# list_restwop_H0
# list_restwop_H1
# one to one allocation
# H1
width_ci_a1 <- list_restwop_H1[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H1$width_ci_a1[1] <-mean(width_ci_a1$width)
width_ci_a2 <- list_restwop_H1[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H1$width_ci_a2[1] <-mean(width_ci_a2$width)
# H0
width_ci_a1 <- list_restwop_H0[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H0$width_ci_a1[1] <-mean(width_ci_a1$width)
width_ci_a2 <- list_restwop_H0[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H0$width_ci_a2[1] <-mean(width_ci_a2$width)
# opt allocation
# H1
width_ciopt_a1 <- list_restwop_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H1$width_ci_a1[4] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_restwop_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H1$width_ci_a2[4] <- mean(width_ciopt_a2$width)
# H0
width_ciopt_a1 <- list_restwop_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H0$width_ci_a1[5] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_restwop_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H0$width_ci_a2[5] <- mean(width_ciopt_a2$width)
# sqrt allocation
# H1
width_cisqrt_a1 <- list_restwop_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H1$width_ci_a1[3] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_restwop_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H1$width_ci_a2[3] <- mean(width_cisqrt_a2$width)
# H0
width_cisqrt_a1 <- list_restwop_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H0$width_ci_a1[6] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_restwop_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H0$width_ci_a2[6] <- mean(width_cisqrt_a2$width)
##########################################
# Results
res_report_H0
res_report_H1
rm(list = ls())
library(tidyverse)
load("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study/results/simstudy_results.RData")
df_res$design = ifelse(as.numeric(df_res$r1)+as.numeric(df_res$r2)==1,"2-period", "3-period")
# df_res$r1+df_res$r2
res_report_H1 <- df_res %>% filter(H0=="FALSE") %>% select(rt_a1,rt_a2,r1,r2,alloc,minrt,design)
knitr::kable(res_report_H1, format = "markdown", caption = c("Power comparisons"))
res_report_H0 <- df_res %>% filter(H0=="TRUE") %>% select(rt_a1,rt_a2,r1,r2,alloc,minrt,design)
knitr::kable(res_report_H0, format = "markdown", caption = c("Type 1 error rate"))
res_report_H1$width_ci_a1 <- c(rep(NA,dim(res_report_H1)[1]))
res_report_H1$width_ci_a2 <- c(rep(NA,dim(res_report_H1)[1]))
res_report_H0$width_ci_a1 <- c(rep(NA,dim(res_report_H0)[1]))
res_report_H0$width_ci_a2 <- c(rep(NA,dim(res_report_H0)[1]))
##########################################
# 3-periods
##########################################
# list_res_H1 = list(y,y_opt,y_sqrt)
# one to one allocation
# H1
width_ci_a1 <- list_res_H1[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H1$width_ci_a1[1] <-mean(width_ci_a1$width)
width_ci_a2 <- list_res_H1[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H1$width_ci_a2[1] <-mean(width_ci_a2$width)
# H0
width_ci_a1 <- list_res_H0[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H0$width_ci_a1[1] <-mean(width_ci_a1$width)
width_ci_a2 <- list_res_H0[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H0$width_ci_a2[1] <-mean(width_ci_a2$width)
# opt allocation
# H1
width_ciopt_a1 <- list_res_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H1$width_ci_a1[2] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_res_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H1$width_ci_a2[2] <- mean(width_ciopt_a2$width)
# H0
width_ciopt_a1 <- list_res_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H0$width_ci_a1[2] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_res_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H0$width_ci_a2[2] <- mean(width_ciopt_a2$width)
# sqrt allocation
# H1
width_cisqrt_a1 <- list_res_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H1$width_ci_a1[3] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_res_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H1$width_ci_a2[3] <- mean(width_cisqrt_a2$width)
# H0
width_cisqrt_a1 <- list_res_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H0$width_ci_a1[3] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_res_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H0$width_ci_a2[3] <- mean(width_cisqrt_a2$width)
##########################################
# Two periods
##########################################
# list_restwop_H0
# list_restwop_H1
# one to one allocation
# H1
width_ci_a1 <- list_restwop_H1[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H1$width_ci_a1[4] <-mean(width_ci_a1$width)
width_ci_a2 <- list_restwop_H1[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H1$width_ci_a2[4] <-mean(width_ci_a2$width)
# H0
width_ci_a1 <- list_restwop_H0[[1]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ci_a1$width <- width_ci_a1$upper_ci - width_ci_a1$lower_ci
res_report_H0$width_ci_a1[4] <-mean(width_ci_a1$width)
width_ci_a2 <- list_restwop_H0[[1]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ci_a2$width <- width_ci_a2$upper_ci - width_ci_a2$lower_ci
res_report_H0$width_ci_a2[4] <-mean(width_ci_a2$width)
# opt allocation
# H1
width_ciopt_a1 <- list_restwop_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H1$width_ci_a1[5] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_restwop_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H1$width_ci_a2[5] <- mean(width_ciopt_a2$width)
# H0
width_ciopt_a1 <- list_restwop_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_ciopt_a1$width <- width_ciopt_a1$upper_ci - width_ciopt_a1$lower_ci
res_report_H0$width_ci_a1[5] <- mean(width_ciopt_a1$width)
width_ciopt_a2 <- list_restwop_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_ciopt_a2$width <- width_ciopt_a2$upper_ci - width_ciopt_a2$lower_ci
res_report_H0$width_ci_a2[5] <- mean(width_ciopt_a2$width)
# sqrt allocation
# H1
width_cisqrt_a1 <- list_restwop_H1[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H1$width_ci_a1[6] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_restwop_H1[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H1$width_ci_a2[6] <- mean(width_cisqrt_a2$width)
# H0
width_cisqrt_a1 <- list_restwop_H0[[2]] %>% filter(arm == "a1") %>% select(lower_ci, upper_ci)
width_cisqrt_a1$width <- width_cisqrt_a1$upper_ci - width_cisqrt_a1$lower_ci
res_report_H0$width_ci_a1[6] <- mean(width_cisqrt_a1$width)
width_cisqrt_a2 <- list_restwop_H0[[2]] %>% filter(arm == "a2") %>% select(lower_ci, upper_ci)
width_cisqrt_a2$width <- width_cisqrt_a2$upper_ci - width_cisqrt_a2$lower_ci
res_report_H0$width_ci_a2[6] <- mean(width_cisqrt_a2$width)
##########################################
# Results
res_report_H0
res_report_H1
width_ciopt_a2$width
sd(width_ciopt_a2$width)
##########################################
# Results
res_report_H0
res_report_H1
rm(list = ls())
# install.packages("plyr")
library(plyr)
# devtools::install_github("pavlakrotka/NCC@v1.0")
library(NCC)
# devtools::install_github("ianmoran11/mmtable2")
library(mmtable2)
library(gt)
library(tidyverse)
##########################################
# Functions
source("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study/aux_functions.R")
##########################################
# syntaxix
# sim_designs(r1,r2,mu0,mu1,mu2,N,alloc="sqrt",sl=0.2)
# Examples:
# r1=20/70;r2=30/70;mu0=0;mu1=1;mu2=1;N=70;alloc="opt"
db=sim_designs(r1=20/70,r2=30/70,mu0=0,mu1=1,mu2=1,N=70,alloc="one")
head(db)
plot_trial(db$data$treatment)
db=sim_designs(r1=20/70,r2=30/70,mu0=0,mu1=1,mu2=1,N=70,alloc="opt")
head(db$data)
plot_trial(db$data$treatment)
##########################################
# Modeling
##########################################
# # NCC pkg functions
# fixmodel_cont(data=db,arm=2,alpha=0.025) #model using ncc
# sepmodel_adj_cont(data=db,arm=1,alpha=0.025) #model using cc only
res_all = do.call(rbind.data.frame, models(data = db$data) )
head(res_all)
res_all$width_ci = res_all$upper_ci  - res_all$lower_ci
res_cc = do.call(rbind.data.frame, models_cc(data = db$data) )
head(res)
# original study
n_control = 31
n_arm1 = 31
n_arm2 = 30
N = n_control + n_arm1 + n_arm2
# means
mean_control = 17.3/3.5
mean_arm1 = 66.2/3.5
mean_arm2 = 72.3/3.5
# design 1: multi-arm design
db1_one = sim_designs(r1=1,r2=0,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="one")
db1_sqrt = sim_designs(r1=1,r2=0,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="sqrt")
db1_opt = sim_designs(r1=1,r2=0,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="opt")
# head(db)
mod <- lm(response ~ as.factor(treatment), db1_sqrt$data)
mod
summary(mod)
##########################################
N = 500
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
##########################################
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=mean_control,mu1=mean_arm1,mu2=mean_arm2,N=N,alloc="opt")
plot_trial(db3_opt$data$treatment)
# sample sizes
db3_one$ss
db3_sqrt$ss
db3_opt$ss
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
N = 10000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
N = 10000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
N = 10000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
##########################################
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
##########################################
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
##########################################
N = 1000
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
# design 3: three-period design (non-symmetric design)
db3_one=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="one")
db3_sqrt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="sqrt")
db3_opt=sim_designs(r1=N1/N,r2=N2/N,mu0=0,mu1=0,mu2=0,N=N,alloc="opt")
db3_one_ss <- data.frame(arms=c("A1","A2","C"),db3_one$ss, c(sum(db3_one$ss[1,]),sum(db3_one$ss[2,]),sum(db3_one$ss[3,])))
db3_sqrt_ss <- data.frame(arms=c("A1","A2","C"), db3_sqrt$ss, c(sum(db3_sqrt$ss[1,]),sum(db3_sqrt$ss[2,]),sum(db3_sqrt$ss[3,])))
db3_opt_ss <- data.frame(arms=c("A1","A2","C"), db3_opt$ss, c(sum(db3_opt$ss[1,]),sum(db3_opt$ss[2,]),sum(db3_opt$ss[3,])))
knitr::kable(db3_one_ss, format = "markdown", caption = c("Sample sizes per period and arm (1:1)"), col.names = c("Arms", "Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_sqrt_ss, format = "markdown", caption = c("Sample sizes per period and arm (sqrt(k)-rule)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
knitr::kable(db3_opt_ss, format = "markdown", caption = c("Sample sizes per period and arm (optimal allocations)"), col.names = c("Arms","Period 1","Period 2","Period 3", "Total per arm"))
res3_one = do.call(rbind.data.frame, models_cc(data = db3_one$data) )
res3_one$width_ci = res3_one$upper_ci  - res3_one$lower_ci
knitr::kable(res3_one, format = "markdown")
res3_sqrt = do.call(rbind.data.frame, models_cc(data = db3_sqrt$data) )
res3_sqrt$width_ci = res3_sqrt$upper_ci  - res3_sqrt$lower_ci
knitr::kable(res3_sqrt, format = "markdown")
res3_opt = do.call(rbind.data.frame, models_cc(data = db3_opt$data) )
res3_opt$width_ci = res3_opt$upper_ci  - res3_opt$lower_ci
knitr::kable(res3_opt, format = "markdown")
