# rownames= c("Arm 2", "Arm 1", "Control"),
digits=3)
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="sqrt",sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
knitr::kable(m,
format = "latex", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
# row.names=T,
# rownames= c("Arm 2", "Arm 1", "Control"),
digits=3)
knitr::kable(m,
format = "latex", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
# rownames= c("Arm 2", "Arm 1", "Control"),
digits=3)
knitr::kable(m,
format = "markdown", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
# rownames= c("Arm 2", "Arm 1", "Control"),
digits=3)
alloc_str <- c("one","opt","sqrt")
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
knitr::kable(m,
format = "markdown", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3)
}
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "markdown", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "markdown", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
print(knitr::kable(m,
format = "latex", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = c("Sample sizes"),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
paste(alloc_str[i])
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i], design),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
N = 92
N1 = round(N/4)
N2 = round(N-N1)
c(N1,N2,N-N1-N2)
sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="one",sl=0)$ss
sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="opt",sl=0)$ss
sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="sqrt",sl=0)$ss
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study")#local
# setwd("~/GitHub/Allocation/case-study")
library(tidyverse)
library(dplyr)
# install.packages("plyr")
library(plyr)
# devtools::install_github("pavlakrotka/NCC@v1.1", force=T)
library(NCC)
# devtools::install_github("ianmoran11/mmtable2")
library(mmtable2)
# install.packages("gt")
library(gt)
##########################################
# Functions
source("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study/aux_functions.R") #local
# source("~/GitHub/Allocation/case-study/aux_functions.R") #server
##########################################
# Case study
##########################################
# original study - obtained means
mean_control = 17.3/3.5
mean_arm1 = 66.2/3.5
mean_arm2 = 72.3/3.5
##########################################
# design 3: three-period design (symmetric design)
##########################################
N = 92
N1 = round(N/3)
N3 = round(N/3)
N2 = N-N1-N3
c(N1,N2,N-N1-N2)
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study")#local
# setwd("~/GitHub/Allocation/case-study")
library(tidyverse)
library(dplyr)
# install.packages("plyr")
library(plyr)
# devtools::install_github("pavlakrotka/NCC@v1.1", force=T)
library(NCC)
# devtools::install_github("ianmoran11/mmtable2")
library(mmtable2)
# install.packages("gt")
library(gt)
##########################################
# Functions
source("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study/aux_functions.R") #local
# source("~/GitHub/Allocation/case-study/aux_functions.R") #server
##########################################
# Case study
##########################################
# original study - obtained means
mean_control = 17.3/3.5
mean_arm1 = 66.2/3.5
mean_arm2 = 72.3/3.5
##########################################
# design 3: three-period design (symmetric design)
##########################################
N = 92
N1 = round(N/3)
N3 = round(N/3)
N2 = N-N1-N3
c(N1,N2,N-N1-N2)
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
##########################################
# design 3: three-period design (non-symmetric design)
##########################################
N = 92
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
N = 92
N1 = round(N/3)
N2 = round(2*(N-N1)/3)
c(N1,N2,N-N1-N2)
N = 92
N1 = round(N/3)
N3 = round(N/3)
N2 = N-N1-N3
c(N1,N2,N-N1-N2)
N = 92
N1 = round(N/4)
N2 = round(N-N1)
c(N1,N2,N-N1-N2)
N = 92
N1 = round(N/4)
N2 = round(N-N1)
c(N1,N2,N-N1-N2)
# sim_designs(r1=N1/N,r2=N2/N,
#             mu0=mean_control,mu1=6,mu2=6,
#             N=N,alloc="one",sl=0)$ss
#
#
# sim_designs(r1=N1/N,r2=N2/N,
#             mu0=mean_control,mu1=6,mu2=6,
#             N=N,alloc="opt",sl=0)$ss
#
#
# sim_designs(r1=N1/N,r2=N2/N,
#             mu0=mean_control,mu1=6,mu2=6,
#             N=N,alloc="sqrt",sl=0)$ss
# m <- sim_designs(r1=N1/N,r2=N2/N,
#                  mu0=mean_control,mu1=6,mu2=6,
#                  N=N,alloc="sqrt",sl=0)$ss
# rownames(m) <- c("Arm 2", "Arm 1", "Control")
# knitr::kable(m,
#              format = "markdown", caption = c("Sample sizes"),
#              col.names = c("Period 1", "Period 2", "Period 3"),
#              row.names=T,
#              digits=3)
alloc_str <- c("one","opt","sqrt")
for(i in 1:3){
m <- sim_designs(r1=N1/N,r2=N2/N,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc=alloc_str[i],sl=0)$ss
rownames(m) <- c("Arm 2", "Arm 1", "Control")
print(knitr::kable(m,
format = "latex", caption = paste(alloc_str[i]),
col.names = c("Period 1", "Period 2", "Period 3"),
row.names=T,
digits=3))
}
shiny::runApp('C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/OptiPlat')
##########################################
# Optimal allocation
# Simulation study
# 2022-Nov
# Marta Bofill Roig
##########################################
rm(list = ls())
# setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study")#local
setwd("~/GitHub/Allocation/case-study")
##########################################
# Optimal allocation
# Simulation study
# 2022-Nov
# Marta Bofill Roig
##########################################
rm(list = ls())
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study")#local
# setwd("~/GitHub/Allocation/case-study")
library(tidyverse)
library(dplyr)
# install.packages("plyr")
library(plyr)
# devtools::install_github("pavlakrotka/NCC@v1.1", force=T)
library(NCC)
# devtools::install_github("ianmoran11/mmtable2")
library(mmtable2)
# install.packages("gt")
library(gt)
##########################################
# Functions
source("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/case-study/aux_functions.R") #local
# source("~/GitHub/Allocation/case-study/aux_functions.R") #server
##########################################
# syntaxix
# sim_designs(r1,r2,mu0,mu1,mu2,N,alloc="sqrt",sl=0.2)
# Examples:
# r1=20/70;r2=30/70;mu0=0;mu1=1;mu2=1;N=70;alloc="opt"
# db=sim_designs(r1=20/70,r2=30/70,mu0=0,mu1=1,mu2=1,N=70,alloc="one")
# head(db)
# plot_trial(db$data$treatment)
#
# db=sim_designs(r1=20/70,r2=30/70,mu0=0,mu1=1,mu2=1,N=70,alloc="opt")
# head(db$data)
# plot_trial(db$data$treatment)
#
# op <- fixmodel_cont(data=db$data,arm=2,alpha=0.025)# with using ncc
# summary(op$model)
# fixmodel_cont(data=db$data,arm=2,alpha=0.025,ncc=F)# without using ncc
##########################################
# Case study
##########################################
# original study - obtained means
mean_control = 17.3/3.5
mean_arm1 = 66.2/3.5
mean_arm2 = 72.3/3.5
##########################################
# Simulations
##########################################
nsim=100000
# nsim=10
set.seed(2514)
df_res = data.frame(rt_a1=c(0),rt_a2=c(0),r1=c(0),r2=c(0),mu0=c(0),mu1=c(0),mu2=c(0),N=c(0),alloc=c("one"),trend=c(0),H0=F,var_e1=c(0), var_e2=c(0))
i=1
library(foreach)
library(doParallel)
#setup parallel backend to use many processors
cores=detectCores()
cl <- makeCluster(cores[1]-1) #not to overload your computer
registerDoParallel(cl)
##########################################
# design 3: three-period design (symmetric design)
##########################################
N = 92
N1 = round(N/3)
N3 = round(N/3)
N2 = N-N1-N3
c(N1,N2,N-N1-N2)
sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="one",sl=0)
sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="opt",sl=0)
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="opt",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
e1_t1e <- sum(y1_t1e)/nsim
e1_t1e
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=4,mu2=4,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
mean_control
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5,mu2=5,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.5,mu2=5.5,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.75,mu2=5.75,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.7,mu2=5.7,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=6,mu2=6,
N=N,alloc="opt",sl=0)
nsim=10000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.65,mu2=5.65,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
nsim=100000
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.65,mu2=5.65,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
5.65-mean_control
# 1:1 allocation
y_sym = rdply(nsim,
do.call(rbind.data.frame,
models_cc(data = sim_designs(r1=N/N,r2=0,
mu0=mean_control,mu1=5.66,mu2=5.66,
N=N,alloc="one",sl=0)$data
)
)
)
# t1e / power
y1_t1e <- y_sym %>%
filter(arm == "a1") %>%
select(reject_h0)
(e1_t1e <- sum(y1_t1e)/nsim)
