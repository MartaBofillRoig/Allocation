##########################################
# Optimal allocation
# Case study
##########################################
devtools::install_github("pavlakrotka/NCC@v1.0")
library(NCC)
# original study
n_control = 31
n_arm1 = 31
n_arm2 = 30
N = n_control + n_arm1 + n_arm2
# means
mean_control = 17.3/3.5
mean_arm1 = 66.2/3.5
mean_arm2 = 72.3/3.5
dsim_design1 -> function(n_control,n_arm1,n_arm2,mean_control,mean_arm1,mean_arm2){
response = c(rnorm(n_control, mean=mean_control, sd=1),
rnorm(n_arm1, mean=mean_arm1, sd=1),
rnorm(n_arm2, mean=mean_arm2, sd=1))
treatment = c(rep(0,n_control),
rep(1,n_arm1),
rep(2,n_arm2))
period = c(rep(1,n_control + n_arm1 + n_arm2))
data = data.frame(response,treatment,period)
}
response = c(rnorm(n_control, mean=mean_control, sd=1),
rnorm(n_arm1, mean=mean_arm1, sd=1),
rnorm(n_arm2, mean=mean_arm2, sd=1))
treatment = c(rep(0,n_control),
rep(1,n_arm1),
rep(2,n_arm2))
period = c(rep(1,n_control + n_arm1 + n_arm2))
data = data.frame(response,treatment,period)
# dsim_design1
head(data)
dim(data)
fixmodel_cont(data,arm=1,alpha=0.025)
fixmodel_cont(data,arm=2,alpha=0.025)
sepmodel_adj_cont(data,arm=1,alpha=0.025)
sepmodel_adj_cont(data,arm=2,alpha=0.025)
sepmodel_adj_cont
data[data$treatment %in% c(0, 1),]
data[data$treatment %in% c(0, 2),]
sepmodel_adj_cont(data,arm=1,alpha=0.025)
sepmodel_adj_cont(data,arm=2,alpha=0.025)
dsim_design1 <- function(n_c,n_a1,n_a2,mu_c,mu_a1,mu_a2){
response = c(rnorm(n_c, mean=mu_c, sd=1),
rnorm(n_a1, mean=mu_a1, sd=1),
rnorm(n_a2, mean=mu_a2, sd=1))
treatment = c(rep(0,n_c),
rep(1,n_a1),
rep(2,n_a2))
period = c(rep(1,n_c + n_a1 + n_a2))
data = data.frame(response,treatment,period)
}
data=dsim_design1(n_c=n_control,n_a1=n_arm1,n_a2=n_arm2,mu_c=mean_control,mu_a1=mean_arm1,mu_a2=mean_arm2)
# dsim_design1
head(data)
dim(data)
fixmodel_cont(data,arm=1,alpha=0.025)
lf_a1=fixmodel_cont(data,arm=1,alpha=0.025)
lf_a2=fixmodel_cont(data,arm=2,alpha=0.025)
ls_a1=sepmodel_adj_cont(data,arm=1,alpha=0.025)
ls_a2=sepmodel_adj_cont(data,arm=2,alpha=0.025)
lf_a1
matrix[lf_a1,lf_a2,ls_a1,ls_a2]
list[lf_a1,lf_a2,ls_a1,ls_a2]
lf_a1
is.list(lf_a1)
sapply(lf_a1,lf_a2,ls_a1,ls_a2)
lf_a1=fixmodel_cont(data,arm=1,alpha=0.025)
lf_a2=fixmodel_cont(data,arm=2,alpha=0.025)
ls_a1=sepmodel_adj_cont(data,arm=1,alpha=0.025)
ls_a2=sepmodel_adj_cont(data,arm=2,alpha=0.025)
sapply(lf_a1,lf_a2,ls_a1,ls_a2)
lf_a1
list(lf_a1,lf_a2,ls_a1,ls_a2)
list[[4]]
list[4]
x=list(lf_a1,lf_a2,ls_a1,ls_a2)
x[[4]]
x[[,4]]
x[4]
x=data.frame(lf_a1,lf_a2,ls_a1,ls_a2)
x
x=matrix(unlist(lf_a1),unlist(lf_a2),unlist(ls_a1),unlist(ls_a2))
x=matrix(c(unlist(lf_a1),unlist(lf_a2),unlist(ls_a1),unlist(ls_a2)),nrow = 4)
x
ls_a2
lf_a1
x=matrix(c(unlist(lf_a1),unlist(lf_a2),unlist(ls_a1),unlist(ls_a2)),nrow = 5)
x
lf_a1[1]
lf_a1[2]
lf_a1[4]
lf_a1[5]
lf_a1[1,5]
lf_a1[c(1,5)]
db<-data.frame()
db<-data.frame()
db<-lf_a1[c(1,5)]
db
db<-data.frame()
db<-c(lf_a1[c(1,5)])
db
unlist(lf_a1)
unlist(lf_a1)[c(1,5)]
res<-data.frame()
res<-unlist(lf_a1)[c(1,5)]
res
res[1,]<-unlist(lf_a1)[c(1,5)]
res[,1]<-unlist(lf_a1)[c(1,5)]
res[1,]<-unlist(lf_a1)[c(1,5)]
lf_a1[c(1,5)]
c(lf_a1[c(1,5)])
lf_a1=fixmodel_cont(data,arm=1,alpha=0.025)
lf_a2=fixmodel_cont(data,arm=2,alpha=0.025)
ls_a1=sepmodel_adj_cont(data,arm=1,alpha=0.025)
ls_a2=sepmodel_adj_cont(data,arm=2,alpha=0.025)
db<-c(lf_a1[c(1,5)])
db
db
list(lf_a1,lf_a2,ls_a1,ls_a2)
models <- function(data,alpha=0.025){
lf_a1=fixmodel_cont(data,arm=1,alpha=0.025)
lf_a2=fixmodel_cont(data,arm=2,alpha=0.025)
ls_a1=sepmodel_adj_cont(data,arm=1,alpha=0.025)
ls_a2=sepmodel_adj_cont(data,arm=2,alpha=0.025)
return(list(lf_a1,lf_a2,ls_a1,ls_a2))
}
models <- function(data,alpha=0.025){
lf_a1=fixmodel_cont(data,arm=1,alpha=0.025)
lf_a2=fixmodel_cont(data,arm=2,alpha=0.025)
ls_a1=sepmodel_adj_cont(data,arm=1,alpha=0.025)
ls_a2=sepmodel_adj_cont(data,arm=2,alpha=0.025)
return(list(lf_a1,lf_a2,ls_a1,ls_a2))
}
49+37+5+23+12
126-12
