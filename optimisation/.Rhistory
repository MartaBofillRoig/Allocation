shiny::runApp()
library(nloptr)
library(parallel)
install.packages("nloptr")
install.packages("nloptr")
install.packages("parallel")
shiny::runApp()
shiny::runApp()
install.packages(NLopt )
install.packages("NLopt")
install.packages("Rtools")
install.packages("Rtools42")
library('devtools')
install_github("jyypma/nloptr")
library('devtools')
install_github("jyypma/nloptr")
shiny::runApp()
detectCores()
detectCores()-2
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(latex2exp)
library(tidyverse)
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation")
#################################
# Case 3
Power=function(x,y)x^y
eq=function(r22,r1=0.1,r2=0.8) (r1 + ((Power(r2,2) - 4*r2*r22 + 2*Power(r22,2))*Power(Power(r2,2) - 2*r2*r22 + 2*Power(r22,2),2))/(Power(r2,2)*Power(r2 - r22,3)) - (1-r1-r2))/4.
fr12=function(r22,r1=0.1,r2=0.8) (r2*(r2 - 2*r22))/(2*(r2 - r22))
f=Vectorize(function(r1,r2) {
r22=uniroot(eq,c(0,r2),r1=r1,r2=r2)$root
r12=fr12(r22,r1,r2)
r02=r2-r12-r22
sol=c(r1,r2,r02,r12,r22)
sol
})
fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
res=fr1(0.49)
plot(res[2,],res[3,]/res[2,],type="l",ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=1)
lines(res[2,],res[4,]/res[2,],col="red")
lines(res[2,],res[5,]/res[2,],col="blue")
res=fr1(0.49)
plot(res[2,],res[3,]/res[2,],type="l",ylim=c(0,.5),xlim=c(0,1),xlab=expression(r[2]),ylab="Allocation Ratios Period 2 as fraction of N2",main="Case 3",sub="(r1=0,0.2,0.4,0.49)",lty=2)
lines(res[2,],res[4,]/res[2,],col="red")
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
rm(list = ls())
library(latex2exp)
library(tidyverse)
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation")
#################################
# Case 3
Power=function(x,y)x^y
eq=function(r22,r1=0.1,r2=0.8) (r1 + ((Power(r2,2) - 4*r2*r22 + 2*Power(r22,2))*Power(Power(r2,2) - 2*r2*r22 + 2*Power(r22,2),2))/(Power(r2,2)*Power(r2 - r22,3)) - (1-r1-r2))/4.
fr12=function(r22,r1=0.1,r2=0.8) (r2*(r2 - 2*r22))/(2*(r2 - r22))
f=Vectorize(function(r1,r2) {
r22=uniroot(eq,c(0,r2),r1=r1,r2=r2)$root
r12=fr12(r22,r1,r2)
r02=r2-r12-r22
sol=c(r1,r2,r02,r12,r22)
sol
})
fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
#################################
results1 <- read_csv("results1.csv", col_names = FALSE)
results1=rename(results1,r12=X1,r22=X2)
results1$r2 <- (40:90)/100
results1$r02 <- 1- results1$r12-results1$r22
head(results1)
r1=0.1
# pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3ncc_r1_",r1,".pdf",sep=""))
plot(results1$r2,results1$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results1$r2,results1$r12,col="red")
lines(results1$r2,results1$r22,col="blue")
lines(results1$r2,results1$r02,col="black")
res=fr1(r1)
lines(res[2,],res[3,]/res[2,],type="l",lty=2)
# abline(h=0,col="grey")
# abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
rm(list = ls())
library(latex2exp)
library(tidyverse)
setwd("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation")
#################################
# Case 3
Power=function(x,y)x^y
eq=function(r22,r1=0.1,r2=0.8) (r1 + ((Power(r2,2) - 4*r2*r22 + 2*Power(r22,2))*Power(Power(r2,2) - 2*r2*r22 + 2*Power(r22,2),2))/(Power(r2,2)*Power(r2 - r22,3)) - (1-r1-r2))/4.
fr12=function(r22,r1=0.1,r2=0.8) (r2*(r2 - 2*r22))/(2*(r2 - r22))
f=Vectorize(function(r1,r2) {
r22=uniroot(eq,c(0,r2),r1=r1,r2=r2)$root
r12=fr12(r22,r1,r2)
r02=r2-r12-r22
sol=c(r1,r2,r02,r12,r22)
sol
})
fr1=function(r1,steps=100) f(r1,seq(.5-r1,1-r1,length.out=steps))
#################################
results1 <- read_csv("results1.csv", col_names = FALSE)
results1=rename(results1,r12=X1,r22=X2)
results1$r2 <- (40:90)/100
results1$r02 <- 1- results1$r12-results1$r22
head(results1)
r1=0.1
pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3_r1_",r1,".pdf",sep=""))
plot(results1$r2,results1$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results1$r2,results1$r12,col="red")
lines(results1$r2,results1$r22,col="blue")
lines(results1$r2,results1$r02,col="black")
# nonconcurrent controls
res=fr1(r1)
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
dev.off()
#
results2 <- read_csv("results2.csv", col_names = FALSE)
results2=rename(results2,r12=X1,r22=X2)
results2$r2 <- (20:70)/100
results2$r02 <- 1- results2$r12-results2$r22
head(results2)
r1=0.3
pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3_r1_",r1,".pdf",sep=""))
plot(results2$r2,results2$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results2$r2,results2$r12,col="red")
lines(results2$r2,results2$r22,col="blue")
lines(results2$r2,results2$r02,col="black")
# nonconcurrent controls
res=fr1(r1)
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
dev.off()
#
results3 <- read_csv("results3.csv", col_names = FALSE)
results3=rename(results3,r12=X1,r22=X2)
results3$r2 <- (10:60)/100
results3$r02 <- 1- results3$r12-results3$r22
head(results3)
r1=0.4
pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3_r1_",r1,".pdf",sep=""))
plot(results3$r2,results3$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results3$r2,results3$r12,col="red")
lines(results3$r2,results3$r22,col="blue")
lines(results3$r2,results3$r02,col="black")
# nonconcurrent controls
res=fr1(r1)
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
dev.off()
#
results4 <- read_csv("results4.csv", col_names = FALSE)
results4=rename(results4,r12=X1,r22=X2)
results4$r2 <- (1:49)/100
results4$r02 <- 1- results4$r12-results4$r22
head(results4)
r1=0.49
pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3_r1_",r1,".pdf",sep=""))
plot(results4$r2,results4$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results4$r2,results4$r12,col="red")
lines(results4$r2,results4$r22,col="blue")
lines(results4$r2,results4$r02,col="black")
# nonconcurrent controls
res=fr1(r1)
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
dev.off()
results4 <- read_csv("results4.csv", col_names = FALSE)
results4=rename(results4,r12=X1,r22=X2)
results4$r2 <- (1:49)/100
results4$r02 <- 1- results4$r12-results4$r22
head(results4)
r1=0.49
pdf(paste("C:/Users/mbofi/Dropbox/CeMSIIS/GitHub/Allocation/optimisation/case3_r1_",r1,".pdf",sep=""))
plot(results4$r2,results4$r02,type="l",ylim=c(0,.5),xlim=c(0,1),xlab=TeX("$r_{2}$"),ylab="Allocation Ratios Period 2",lty=1, main=TeX(paste("$r_{1}=$",r1,sep="")))
abline(h=0,col="grey")
abline(h=sqrt(2)/(2+sqrt(2)),col="grey")
abline(v=1-2*c(r1),col="grey")
lines(results4$r2,results4$r12,col="red")
lines(results4$r2,results4$r22,col="blue")
lines(results4$r2,results4$r02,col="black")
# nonconcurrent controls
res=fr1(r1)
lines(res[2,],res[4,]/res[2,],col="red",lty=2)
lines(res[2,],res[5,]/res[2,],col="blue",lty=2)
lines(res[2,],res[3,]/res[2,],col="black",lty=2)
dev.off()
